{
  "extends": "../../tsconfig.json", // 需要继承的配置文件
  // 指定哪些文件需要被编译
  // 默认值: files 选项指定了的话则为[], 否则为 **
  "include": [
    "src/**/*"
  ],
  // 不需要被编译的文件目录(注；只是排除在 include 中内容，也就是取 include 与 exclude 的差集)
  // 默认值:  ["node_modules", "bower_componets", "jspm_packages"]
  // "exclude": ["./src/base.config.ts"],
  // 指定需要编译的文件列表，一般 files 与 include 只会指定其中一个，默认值: false
  // "files": [],
  "compilerOptions": {
    // 指定编译后的文件目录
    // 默认值: 与原文件同一目录
    "outDir": "esm",
    // 将全局作用域中代码合并为一个指定文件，只能在 module 指定为 none, system, amd 时才可使用
    // "outFile": "./dist/app.js",
    // 指定以什么方式解析jsx
    // 可选值: preserve, react, react-native, react-jsx, react-jsxdev
    // "jsx": "react",
    // 指定使用什么样的方法去解析jsx
    // 可选值: React.createElement（默认值），其他任何可以作为声明有效变量名
    // "jsxFactory": "React.createElement",
    // 指定使用什么样的方法去解析 Fragment
    // 默认值: Fragment
    // "jsxFragmentFactory": "Fragment",
    // 指定解析 jsx 的模块名，默认是 react，当然也可以是其他的模块名，比如 preact
    // "jsxImportSource": "react",
    // 指定模块基础路径，比如 'hello/world' 会解析成 './hello/world'
    // "baseUrl": ".",
    // 指定 require/import 的解析路径
    "paths": {
      "@monitor/core": [
        "../core/src"
      ]
    }
  },
}
